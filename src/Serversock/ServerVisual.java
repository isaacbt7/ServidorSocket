/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Serversock;

import java.awt.Color;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Chack
 */
public class ServerVisual extends javax.swing.JFrame {
    //ServerCode codigo;
    SocketCodes sc = new SocketCodes(5000);
    Thread tr = new Thread(sc);
    /**
     * Creates new form ServerVisual
     */
    public ServerVisual() {
        initComponents();
        setter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Lserver = new javax.swing.JLabel();
        Lcliente = new javax.swing.JLabel();
        Tremote = new javax.swing.JLabel();
        Bstartstop = new javax.swing.JButton();
        Lstatus = new javax.swing.JLabel();
        Lip = new javax.swing.JLabel();
        Lipinterna = new javax.swing.JLabel();
        Lip2 = new javax.swing.JLabel();
        Lipexterna = new javax.swing.JLabel();
        Lp1 = new javax.swing.JLabel();
        Lpuerto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Lserver.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Lserver.setText("Servidor");

        Lcliente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Lcliente.setText("Clientes: ");

        Tremote.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Tremote.setText("0.0.0.0");

        Bstartstop.setText("Iniciar");
        Bstartstop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BstartstopActionPerformed(evt);
            }
        });

        Lstatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Lstatus.setText("Offline");

        Lip.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Lip.setText("IP Interna:");

        Lipinterna.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Lipinterna.setText("0.0.0.0");

        Lip2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Lip2.setText("IP Externa:");

        Lipexterna.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Lipexterna.setText("0.0.0.0");

        Lp1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Lp1.setText("Puerto:");

        Lpuerto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Lpuerto.setText("00000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Lcliente, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                .addComponent(Lserver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Lstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Tremote, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(279, 279, 279))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Lip)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(Lipinterna, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Lp1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(Lpuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(147, 147, 147)
                            .addComponent(Bstartstop)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Lip2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Lipexterna, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lserver, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tremote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lip, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lipinterna, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lip2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lipexterna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Lpuerto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Lp1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(Bstartstop)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BstartstopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BstartstopActionPerformed
        // TODO add your handling code here:
        if (Bstartstop.getText().equalsIgnoreCase("Iniciar")) {
            Lstatus.setText("Online");
            Lstatus.setForeground(new Color(21, 155, 68));
            Bstartstop.setText("Detener");
            Lpuerto.setText(sc.getPort() + "");
            SocketCodes.flagx = true;
            tr.start();
            
        } else {
            if (Bstartstop.getText().equalsIgnoreCase("Detener")) {
                System.out.println("Detener");
                Lstatus.setText("offline");
                Lstatus.setForeground(Color.BLACK);
                Bstartstop.setText("Iniciar");
                SocketCodes.flagx = false;
                //envio falso
                if (tr.isAlive()) {
                    SocketEnvio se = new SocketEnvio("localhost", 5000);
                    se.enviando(new Mp3Object());
                    try {
                        Thread.sleep(300);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(ServerVisual.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (!tr.isAlive()) {
                        tr = new Thread(sc);
                        System.out.println("nuevo hilo " + tr.getName());
                    }
                }
            }
        }
    }//GEN-LAST:event_BstartstopActionPerformed

    public void setter() {
        //obteniendo ip
        try {
            InetAddress ips = InetAddress.getLocalHost();
            Lipinterna.setText(ips.getHostAddress());
            Lipexterna.setText(new SocketEnvio().ips());
        } catch (UnknownHostException ex) {
            Logger.getLogger(ServerVisual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerVisual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bstartstop;
    private javax.swing.JLabel Lcliente;
    private javax.swing.JLabel Lip;
    private javax.swing.JLabel Lip2;
    private javax.swing.JLabel Lipexterna;
    private javax.swing.JLabel Lipinterna;
    private javax.swing.JLabel Lp1;
    private javax.swing.JLabel Lpuerto;
    private javax.swing.JLabel Lserver;
    private javax.swing.JLabel Lstatus;
    private javax.swing.JLabel Tremote;
    // End of variables declaration//GEN-END:variables
}
